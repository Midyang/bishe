<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.shop.pojo.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="is_hot" property="isHot" jdbcType="INTEGER" />
    <result column="scid" property="scid" jdbcType="INTEGER" />
    <result column="market_price" property="marketPrice" jdbcType="DOUBLE" />
    <result column="shop_price" property="shopPrice" jdbcType="DOUBLE" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, is_hot, scid, market_price, shop_price, description, image, time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shop.pojo.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shop.pojo.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shop.pojo.Product" >
    insert into product (id, name, is_hot, 
      scid, market_price, shop_price, 
      description, image, time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{isHot,jdbcType=INTEGER}, 
      #{scid,jdbcType=INTEGER}, #{marketPrice,jdbcType=DOUBLE}, #{shopPrice,jdbcType=DOUBLE}, 
      #{description,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shop.pojo.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="isHot != null" >
        is_hot,
      </if>
      <if test="scid != null" >
        scid,
      </if>
      <if test="marketPrice != null" >
        market_price,
      </if>
      <if test="shopPrice != null" >
        shop_price,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null" >
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="scid != null" >
        #{scid,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null" >
        #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopPrice != null" >
        #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shop.pojo.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.isHot != null" >
        is_hot = #{record.isHot,jdbcType=INTEGER},
      </if>
      <if test="record.scid != null" >
        scid = #{record.scid,jdbcType=INTEGER},
      </if>
      <if test="record.marketPrice != null" >
        market_price = #{record.marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.shopPrice != null" >
        shop_price = #{record.shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      is_hot = #{record.isHot,jdbcType=INTEGER},
      scid = #{record.scid,jdbcType=INTEGER},
      market_price = #{record.marketPrice,jdbcType=DOUBLE},
      shop_price = #{record.shopPrice,jdbcType=DOUBLE},
      description = #{record.description,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.pojo.Product" >
    update product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null" >
        is_hot = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="scid != null" >
        scid = #{scid,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null" >
        market_price = #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopPrice != null" >
        shop_price = #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.pojo.Product" >
    update product
    set name = #{name,jdbcType=VARCHAR},
      is_hot = #{isHot,jdbcType=INTEGER},
      scid = #{scid,jdbcType=INTEGER},
      market_price = #{marketPrice,jdbcType=DOUBLE},
      shop_price = #{shopPrice,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="belongTolist">
  	p.id,p.name,p.is_hot,p.scid,p.market_price,p.shop_price,p.description,p.image,p.time
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="map" >
   select <include refid="belongTolist" /> from product p
	   <where>
		   <if test="name != null">
			 and name like '%${name}%'
		   </if>
		   <if test="isHot != null and isHot == 1">
			 and is_hot = #{isHot}
		   </if>
		   <if test="description != null">
			 and description like '%${description}%'
		   </if>
		   <choose>
			   	<when test="minPrice != null and maxPrice == null">
			   	 and shop_price &gt;= #{minPrice}
			    </when>
			    <when test="minPrice == null and maxPrice != null">
			   	 and shop_price &lt;= #{maxPrice}
			    </when>
			    <when  test="minPrice != null and maxPrice != null">
			   	 and shop_price between #{minPrice} and #{maxPrice}
			    </when>
		   </choose>
		   <if test="scid != null and scid != 0">
			 and scid = #{scid}
		   </if>
	   </where>
	    <if test="priceSort != null">
	    	<choose>
	    		<when test="priceSort == 0">
	    		 ORDER BY shop_price DESC
	    		</when>
	    		<when test="priceSort == 1">
	    		 ORDER BY shop_price ASC
	    		</when>
	    	</choose>
	    </if>	
	    <if test="currPage != null and pageSize != null ">
		 LIMIT #{currPage},#{pageSize}
	    </if>
  </select>
  <select id="listCount" resultType="Integer" parameterType="map" >
   select count(1) from product 
	   <where>
		   <if test="name != null">
			 and name like '%${name}%'
		   </if>
		   <if test="isHot != null and isHot != 2">
			 and is_hot = #{isHot}
		   </if>
		   <if test="description != null">
			 and description like '%${description}%'
		   </if>
		   <choose>
		   	<when test="minPrice != null and maxPrice == null">
		   	 and shop_price &gt;= #{minPrice}
		    </when>
		    <when test="minPrice == null and maxPrice != null">
		   	 and shop_price &lt;= #{maxPrice}
		    </when>
		    <when  test="minPrice != null and maxPrice != null">
		   	 and shop_price between #{minPrice} and #{maxPrice}
		    </when>
		   </choose>
		   <if test="scid != null and scid != 0">
			 and scid = #{scid}
		   </if>
	   </where>
	    <if test="priceSort != null">
	    	<choose>
	    		<when test="priceSort == 0">
	    		 ORDER BY shop_price DESC
	    		</when>
	    		<when test="priceSort == 1">
	    		 ORDER BY shop_price ASC
	    		</when>
	    	</choose>
	    </if>	
  </select>
</mapper>